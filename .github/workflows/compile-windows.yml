name: Windows Build

on:
  push:
    branches: [ 3d-rendering, version-* ]
  pull_request:
    branches: [ 3d-rendering ]

env:
  VULKAN_SDK_VERSION: "1.3.280.0"
  BUILD_TYPE_DEBUG: Debug
  BUILD_TYPE_RELEASE: Release

jobs:
  build-windows:
    runs-on: windows-2022

    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        compiler: [msvc]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2

      - name: Setup Visual Studio environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Cache Vulkan SDK
        id: cache-vulkan
        uses: actions/cache@v4
        with:
          path: C:\VulkanSDK
          key: vulkan-sdk-${{ env.VULKAN_SDK_VERSION }}-windows

      - name: Install Vulkan SDK
        if: steps.cache-vulkan.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          $vulkanUrl = "https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_SDK_VERSION }}/windows/VulkanSDK-${{ env.VULKAN_SDK_VERSION }}-Installer.exe"
          $vulkanInstaller = "$env:TEMP\VulkanSDK-Installer.exe"
          
          Write-Host "Downloading Vulkan SDK..."
          Invoke-WebRequest -Uri $vulkanUrl -OutFile $vulkanInstaller
          
          Write-Host "Installing Vulkan SDK..."
          Start-Process -FilePath $vulkanInstaller -ArgumentList "/S" -Wait
          
          # Verify installation
          if (Test-Path "C:\VulkanSDK\${{ env.VULKAN_SDK_VERSION }}") {
            Write-Host "Vulkan SDK installed successfully"
          } else {
            throw "Vulkan SDK installation failed"
          }

      - name: Set Vulkan environment variables
        shell: powershell
        run: |
          echo "VULKAN_SDK=C:\VulkanSDK\${{ env.VULKAN_SDK_VERSION }}" >> $env:GITHUB_ENV
          echo "VK_SDK_PATH=C:\VulkanSDK\${{ env.VULKAN_SDK_VERSION }}" >> $env:GITHUB_ENV
          echo "C:\VulkanSDK\${{ env.VULKAN_SDK_VERSION }}\Bin" >> $env:GITHUB_PATH

      - name: Cache CMake build dependencies
        uses: actions/cache@v4
        with:
          path: |
            build/_deps
            build/vcpkg_installed
          key: cmake-deps-windows-${{ matrix.build_type }}-${{ hashFiles('CMakeLists.txt', 'vcpkg.json') }}
          restore-keys: |
            cmake-deps-windows-${{ matrix.build_type }}-
            cmake-deps-windows-

      - name: Configure CMake
        shell: cmd
        run: |
          mkdir build
          cd build
          cmake .. ^
            -G "Visual Studio 17 2022" ^
            -A x64 ^
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
            -DVULKAN_SDK_PATH="%VULKAN_SDK%" ^
            -DCMAKE_TOOLCHAIN_FILE="%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake"

      - name: Build project
        shell: cmd
        run: |
          cd build
          cmake --build . --config ${{ matrix.build_type }} --parallel %NUMBER_OF_PROCESSORS%

      - name: Verify shaders compilation
        shell: cmd
        run: |
          cd build
          cmake --build . --target Shaders --config ${{ matrix.build_type }}

      - name: Test executable
        shell: cmd
        run: |
          cd build
          dir ${{ matrix.build_type }} /b
          echo "Build completed successfully for ${{ matrix.build_type }}"

      - name: Upload artifacts (Release builds on version tags)
        if: matrix.build_type == 'Release' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: liara-engine-windows-${{ matrix.build_type }}-${{ github.ref_name }}
          path: |
            build/${{ matrix.build_type }}/*.exe
            build/${{ matrix.build_type }}/*.dll
            build/shaders/*.spv
            assets/
          retention-days: 30

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-windows-${{ matrix.build_type }}-${{ github.run_number }}
          path: |
            build/CMakeFiles/CMakeOutput.log
            build/CMakeFiles/CMakeError.log
            build/**/*.log
          retention-days: 7