name: Windows Build

on:
  push:
    branches: [ main, version-* ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published, created ]
  workflow_dispatch:

env:
  VULKAN_SDK_VERSION: "1.3.280.0"
  CMAKE_VERSION: "3.25.3"

jobs:
  build-windows:
    runs-on: windows-2022

    strategy:
      fail-fast: false
      matrix:
        build_preset: [windows-debug, windows-release]
        compiler: [msvc]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2

      - name: Setup Visual Studio environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install CMake 3.25+
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '${{ env.CMAKE_VERSION }}'

      - name: Verify CMake version
        run: cmake --version

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.2
        with:
          version: ${{ env.VULKAN_SDK_VERSION }}
          cache: true

      - name: Set Vulkan environment variables
        shell: powershell
        run: |
          echo "VULKAN_SDK: $env:VULKAN_SDK"
          echo "VK_SDK_PATH: $env:VK_SDK_PATH"
          echo "VULKAN_SDK=$env:VULKAN_SDK" >> $env:GITHUB_ENV
          echo "VK_SDK_PATH=$env:VK_SDK_PATH" >> $env:GITHUB_ENV

      - name: Verify glslc availability
        shell: cmd
        run: |
          where glslc || echo "glslc not found in PATH, checking Vulkan SDK..."
          if exist "%VULKAN_SDK%\Bin\glslc.exe" (
            echo "Found glslc in Vulkan SDK"
            echo "%VULKAN_SDK%\Bin" >> %GITHUB_PATH%
          ) else (
            echo "ERROR: glslc not found!"
            exit /b 1
          )

      - name: Cache CMake build dependencies
        uses: actions/cache@v4
        with:
          path: |
            build/_deps
          key: cmake-deps-windows-${{ matrix.build_preset }}-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            cmake-deps-windows-${{ matrix.build_preset }}-
            cmake-deps-windows-

      - name: Configure CMake
        shell: cmd
        run: |
          cmake --preset=${{ matrix.build_preset }}

      - name: Build project
        shell: cmd
        run: |
          cmake --build --preset=${{ matrix.build_preset }}

      - name: Test executable
        shell: cmd
        run: |
          set "target_dir="
          if "${{ matrix.build_preset }}"=="windows-release" (
            set "target_dir=Release"
          ) else if "${{ matrix.build_preset }}"=="windows-debug" (
            set "target_dir=Debug"
          ) else (
            echo "ERROR: Unknown build preset!"
            exit /b 1
          )
          
          cd build
          cd ${{ matrix.build_preset }}
          dir app\%target_dir% /b
          if exist "app\%target_dir%\Demo.exe" (
            echo "Demo.exe found successfully"
          ) else (
            echo "ERROR: Demo.exe not found!"
            dir app /s
            exit /b 1
          )

      - name: Upload artifacts (Release builds on version tags)
        if: matrix.build_preset == 'windows-release' && startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/main')
        uses: actions/upload-artifact@v4
        with:
          name: liara-engine-windows-${{ matrix.build_preset }}-${{ github.ref_name }}
          path: |
            build/${{ matrix.build_preset }}/Release/app/Demo.exe
            build/${{ matrix.build_preset }}/Release/app/*.dll
            build/${{ matrix.build_preset }}/Release/app/assets/**
          retention-days: 30

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-windows-${{ matrix.build_preset }}-${{ github.run_number }}
          path: |
            build/${{ matrix.build_preset }}/CMakeCache.txt
            build/${{ matrix.build_preset }}/CMakeFiles/
          retention-days: 7