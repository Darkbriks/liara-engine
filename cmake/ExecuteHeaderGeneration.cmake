if(NOT MODULE_FILE OR NOT OUTPUT_HEADER OR NOT MODULE_NAME)
    message(FATAL_ERROR "Required variables not set: MODULE_FILE, OUTPUT_HEADER, MODULE_NAME")
endif()

if(NOT EXISTS "${MODULE_FILE}")
    message(FATAL_ERROR "Module file does not exist: ${MODULE_FILE}")
endif()

message(STATUS "Generating header from module:")
message(STATUS "  Module: ${MODULE_FILE}")
message(STATUS "  Output: ${OUTPUT_HEADER}")

file(READ "${MODULE_FILE}" MODULE_CONTENT)

set(HEADER_CONTENT "")
string(APPEND HEADER_CONTENT "#pragma once\n")
string(APPEND HEADER_CONTENT "// Auto-generated header from module ${MODULE_NAME}\n")
string(APPEND HEADER_CONTENT "// Source: ${MODULE_FILE}\n")
string(APPEND HEADER_CONTENT "// Generator: Liara Engine Module-to-Header System\n")
string(APPEND HEADER_CONTENT "// DO NOT EDIT - This file is automatically generated\n\n")

set(IN_GLOBAL_FRAGMENT TRUE)
set(IN_MODULE_PURVIEW FALSE)
set(COPY_EVERYTHING FALSE)

string(REPLACE ";" "|~|;" MODULE_LINES_INTERMEDIARY "${MODULE_CONTENT}")
string(REPLACE "\n" ";" MODULE_LINES "${MODULE_LINES_INTERMEDIARY}")

foreach(LINE ${MODULE_LINES})
    string(STRIP "${LINE}" STRIPPED_LINE)

    if(IN_GLOBAL_FRAGMENT)
        if(STRIPPED_LINE MATCHES "^module;")
            continue()
        endif()

        if(STRIPPED_LINE MATCHES "^#include")
            string(APPEND HEADER_CONTENT "${LINE}\n")
            continue()
        endif()

        if(STRIPPED_LINE MATCHES "^export module " OR STRIPPED_LINE MATCHES "^module ")
            set(IN_GLOBAL_FRAGMENT FALSE)
            set(IN_MODULE_PURVIEW TRUE)
            string(APPEND HEADER_CONTENT "\n// Module: ${STRIPPED_LINE}\n\n")
            continue()
        endif()
        continue()
    endif()

    if(IN_MODULE_PURVIEW AND NOT COPY_EVERYTHING)
        if(STRIPPED_LINE MATCHES "^export namespace ")
            set(COPY_EVERYTHING TRUE)
            string(REGEX REPLACE "^export " "" NAMESPACE_LINE "${LINE}")
            string(APPEND HEADER_CONTENT "${NAMESPACE_LINE}\n")
            continue()
        endif()
        continue()
    endif()

    if(COPY_EVERYTHING)
        string(REPLACE "|~|" ";" LINE "${LINE}")

        if(STRIPPED_LINE MATCHES "^export ")
            string(REGEX REPLACE "^export " "" CLEANED_LINE "${LINE}")
            string(APPEND HEADER_CONTENT "${CLEANED_LINE}\n")
        else()
            string(APPEND HEADER_CONTENT "${LINE}\n")
        endif()
    endif()
endforeach()

get_filename_component(OUTPUT_DIR "${OUTPUT_HEADER}" DIRECTORY)
file(MAKE_DIRECTORY "${OUTPUT_DIR}")
file(WRITE "${OUTPUT_HEADER}" "${HEADER_CONTENT}")

message(STATUS "Successfully generated header: ${OUTPUT_HEADER}")